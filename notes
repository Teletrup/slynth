set up vsmth
  n-root version?

global thingamajiggles problem
can't call draw from global event handlers
  can bind new event handlers on each render
    does it make stuff slow?

explicit check for handler initialization?
it's the same draw() after all, can bind it
seems finnicky though
a workaround for something that would be trivial in version with one global draw()
but does it really matter? normal event handlers get rebound on each rendering as well
document element isn't special


array of freqs for all midi notes
create and attach oscs on key_down
what about creating oscs? 
are unattached oscs slow?
you'd have to re-initialize them each time you change waveform
are they passively slow though?

note state
  velocity
  adsr

does MIDI signal release and stop separately?


but I want to mix final notes, not sum oscilators
  rly?
  does it matter?

MIDI notes are weird

tidy up keydown & keypress

ignore autorepeat using flags for each key

many oscillators with the same tone should be able to play at once
  shouldn't be a problem, killing the osc can be deferred

filter synced to the note

fm
  varying parameters with periodic wave

using the same patch many times
typable knob readings


why is it so stateful
maybe filters need it?
do I need to create the whole pipeline for each note?

a simple filter stores one sample

I want the signal for each midi note to be processed separately, so I can make the filter offset based on the note
physical synths probably don't do it like that
  rly?

small polyphony

note list-queue
or just array
expired notes get overwritten on insert
  why not while playing?
    additional branch?
    adding a zero is quicker than checking if there's anything to add
      but what if it defragmented the note array? it would loop less from that sample on

how timeouts work?

setValueAtTime in the future?
  that's what it's for probably

what can be done with allpass?

a hacky phase shift extension for osc 
the OOP way
just for lulz

velocity dependent piano key coloring

knob problem
  write fn with explicit side effect?
  same with read function
eliminate the param

when side effect gets farther and farther away from the root view, it gets messier and messier
  rly?

todo
  custom voices
    karplus-strong
  fm synthesis
  gate
  lfo
  delay
  reverb
  unison
  vibrato
  modularity
  tidy stuff up
    buttons
    knobs
      why do they behave as they do
        why they end up in the middle of the screen if display is "block"?
    
mixer/patcher
  fl-studio like
  anything goes
  a list of what goes where
  patch graph

test cases
  n-x osc
  karplus-strong
  noise-o-phone


limited polyphony?
  small number of voices get assigned dynamically to notes

does a boatload of inactive oscillators make stuff laggy

read up how WA nodes work in blink
  initiialization, connection, param change, start, stop

factor out turning on/off a voice

do what seems stupid
  128 voices?

if something seems stupid but works, it might be worth checking out
  at least it works

why does sine sound all weird without compressor
is it clipping?
where is it clipping

try with no envelope

I want a, d, r with 0

fix the silidey-knobs

fix pops

release bug
  a >~ 2r


adsrView, filterView, oscView
setting parameters and the side effects

filter can be passed to filterView, but envs and oscs can't be

in the future I might want to have envelopes for parameters

write a synth with worklets?

do orphaned webaudio nodes get GCd?


why doesn't the compressor attenuate a single note?
yeet the compressor?

voice gain
  better to do at the mixning node, so the knob turning takes the effect while the note is playing

voices
  as many voices as notes
    that number isn't special, 
    initializing all the voice circuits isn't a problem
    not iterating through mute notes during playback
  limited
  reinitialize each time

how to stop webaudio from computing a disconnected circuit?
  maybe it doesn't compute them?
    what about delay lines?

non-deterministic release?

voice allocation

"""
Don't use oscillator.stop(now). Use oscillator.stop(osc1ReleaseVal) to schedule the oscillator to
stop at the same time as the gain goes to 0.

You don't have to disconnect and delete the oscillators. Once stopped, the oscillator can disconnect
itself from the gain node by itself. If you drop the reference to the oscillator, it can be garbage
collected.

"""
  rewrite noteoff
  how disconnecting works?
    can I get that info?
  how about delay nodes?

"delete" vs setting as "undefined"

stopping a voice below an amplitude threshold
  for k-s

karplus-strong
  seems impractical to have 128 delay lines
  12 delay lines?
    works with TET

how are guitar frets spaced?

adding noise waveform


abstracting a wave shape selection view
  abstracting a "selectable" thingy?

is putting a note table into synth a good thing?

some all-note mapping must be inside synth, so the correct note gets released

voice as a data structure
  all the WA nodes
  note name field kinda doesn't fit
    petty

keyboardable component
  call it a synth?
    naaah
      synths should be separated
        they could play in the background
      it's just a midi input
    maybe, but I might want MIDI splitters later
  MIDI receiver
  it can press a note or release it
  Fooboard
    with functions
      downf
      upf
    with objects
      an object with down() and up() methods

fooboard octaves
  fooboard view as a method?
    spurious instantiation?
      I want fooboards other than synths
        like the splittable one
        it's just a wrapper, bro
        but a stateful wrapper
  fooboards won't change destinations
  but they may change octaves

the oop-functional clash

the view also doesnt' change, it could be preinitialized

more VMish way would be to store all fooboard octaves separately

doing it with classes seems bloated

using call
  synth object has fns using "this"
  the fooboard thingy binds them
^^ forgot how methods in old js work


principle of minimal UI binding
  but why?

pure widgets

fooboard IN synth?
in preact I would've used component state for fooboard octave

getting and setting sanely
