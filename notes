set up vsmth
  n-root version?

global thingamajiggles problem
can't call draw from global event handlers
  can bind new event handlers on each render
    does it make stuff slow?

explicit check for handler initialization?
it's the same draw() after all, can bind it
seems finnicky though
a workaround for something that would be trivial in version with one global draw()
but does it really matter? normal event handlers get rebound on each rendering as well
document element isn't special


array of freqs for all midi notes
create and attach oscs on key_down
what about creating oscs? 
are unattached oscs slow?
you'd have to re-initialize them each time you change waveform
are they passively slow though?

note state
  velocity
  adsr

does MIDI signal release and stop separately?


but I want to mix final notes, not sum oscilators
  rly?
  does it matter?

MIDI notes are weird

tidy up keydown & keypress

ignore autorepeat using flags for each key

many oscillators with the same tone should be able to play at once
  shouldn't be a problem, killing the osc can be deferred

filter synced to the note

fm
  varying parameters with periodic wave

using the same patch many times
typable knob readings


why is it so stateful
maybe filters need it?
do I need to create the whole pipeline for each note?

a simple filter stores one sample

I want the signal for each midi note to be processed separately, so I can make the filter offset based on the note
physical synths probably don't do it like that

small polyphony

note list-queue
or just array
expired notes get overwritten on insert
  why not while playing?
    additional branch?
    adding a zero is quicker than checking if there's anything to add
      but what if it defragmented the note array? it would loop less from that sample on

how timeouts work?

setValueAtTime in the future?
  that's what it's for probably

what can be done with allpass?
